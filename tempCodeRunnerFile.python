import tkinter as tk
from tkinter import ttk  # Import ttk for Treeview
import matplotlib.pyplot as plt
from datetime import datetime
import json

# Example data
data = {
    "items": [
        {"name": "Apple", "quantity": 10, "expiry_date": "2024-12-01", "location": "Aisle 5"},
        {"name": "Banana", "quantity": 20, "expiry_date": "2024-11-25", "location": "Aisle 2"},
    ]
}

# Create the main Tkinter window
root = tk.Tk()
root.title("Grocery Inventory")
root.geometry("600x400")

# Function to populate Treeview
def update_treeview():
    treeview.delete(*treeview.get_children())
    for index, item in enumerate(group_items()):
        item_indicator = "âœ“" if len(item["locations"]) > 1 else ""
        treeview.insert(
            "", "end", iid=index, text="",
            values=(item["name"], item["quantity"], item["avg_expiry"], item_indicator)
        )

# Group items by name and calculate average expiry
def group_items():
    grouped_data = {}
    for item in data["items"]:
        name = item["name"]
        quantity = item["quantity"]
        expiry_date = datetime.strptime(item["expiry_date"], "%Y-%m-%d")
        
        if name not in grouped_data:
            grouped_data[name] = {
                "total_quantity": 0,
                "expiry_dates": [],
                "locations": []
            }
        
        grouped_data[name]["total_quantity"] += quantity
        grouped_data[name]["expiry_dates"].append(expiry_date)
        grouped_data[name]["locations"].append(item["location"])

    grouped_items = []
    for name, details in grouped_data.items():
        avg_timestamp = sum(dt.timestamp() for dt in details["expiry_dates"]) / len(details["expiry_dates"])
        avg_expiry_date = datetime.fromtimestamp(avg_timestamp)
        
        grouped_items.append({
            "name": name,
            "quantity": details["total_quantity"],
            "avg_expiry": avg_expiry_date.strftime("%Y-%m-%d"),
            "locations": details["locations"]
        })
    return grouped_items

# Double-click function to show item details
def on_double_click(event):
    selected_item = treeview.selection()[0]
    item_name = treeview.item(selected_item, "values")[0]
    expanded_items = [i for i in data["items"] if i["name"] == item_name]

    # Open a new window to display separated items
    top = tk.Toplevel(root)
    top.title(f"Details of {item_name}")
    
    # Display each item individually
    for i, item in enumerate(expanded_items):
        tk.Label(top, text=f"{i+1}. Quantity: {item['quantity']}, Expiry: {item['expiry_date']}, Location: {item['location']}").pack()

# Set up the Treeview widget
treeview = ttk.Treeview(root, columns=("Name", "Quantity", "Average Expiry", "Grouped"))
treeview.heading("#0", text="")
treeview.heading("Name", text="Name")
treeview.heading("Quantity", text="Quantity")
treeview.heading("Average Expiry", text="Average Expiry")
treeview.heading("Grouped", text="Grouped")
treeview.column("#0", width=0, stretch=tk.NO)  # Hide the default column
treeview.column("Name", anchor="w", width=150)
treeview.column("Quantity", anchor="center", width=80)
treeview.column("Average Expiry", anchor="center", width=120)
treeview.column("Grouped", anchor="center", width=80)

treeview.pack(fill="both", expand=True)

# Bind double-click to show item details
treeview.bind("<Double-1>", on_double_click)

# Populate the treeview initially
update_treeview()

root.mainloop()
